"""Initial migration

Revision ID: d0a93f4ec364
Revises: 
Create Date: 2025-09-01 14:59:47.558578

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = 'd0a93f4ec364'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_patient_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_doctors_id'), table_name='doctors')
    op.drop_table('doctors')
    op.drop_index(op.f('ix_slots_id'), table_name='slots')
    op.drop_table('slots')
    op.drop_index(op.f('ix_medical_history_id'), table_name='medical_history')
    op.drop_index(op.f('ix_medical_history_patient_id'), table_name='medical_history')
    op.drop_table('medical_history')
    op.drop_index(op.f('ix_patients_id'), table_name='patients')
    op.drop_table('patients')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patients',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dob', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('contact_number', sa.VARCHAR(collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('created_at', mssql.DATETIMEOFFSET(), server_default=sa.text('(getdate())'), autoincrement=False, nullable=False),
    sa.Column('updated_at', mssql.DATETIMEOFFSET(), server_default=sa.text('(getdate())'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='FK__patients__user_i__656C112C'),
    sa.PrimaryKeyConstraint('id', name='PK__patients__3213E83F44B9CE5B')
    )
    op.create_index(op.f('ix_patients_id'), 'patients', ['id'], unique=False)
    op.create_table('medical_history',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('condition', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('diagnosis_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('medications', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('allergies', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('treatment', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('created_at', mssql.DATETIMEOFFSET(), server_default=sa.text('(getdate())'), autoincrement=False, nullable=False),
    sa.Column('updated_at', mssql.DATETIMEOFFSET(), server_default=sa.text('(getdate())'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('FK__medical_h__patie__6E01572D'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__medical___3213E83F3B182698'))
    )
    op.create_index(op.f('ix_medical_history_patient_id'), 'medical_history', ['patient_id'], unique=False)
    op.create_index(op.f('ix_medical_history_id'), 'medical_history', ['id'], unique=False)
    op.create_table('slots',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('datetime', mssql.DATETIMEOFFSET(), autoincrement=False, nullable=False),
    sa.Column('is_booked', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], name='FK__slots__doctor_id__693CA210', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='PK__slots__3213E83FBBFC8666')
    )
    op.create_index(op.f('ix_slots_id'), 'slots', ['id'], unique=False)
    op.create_table('doctors',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('specialty', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='PK__doctors__3213E83F4A05A069')
    )
    op.create_index(op.f('ix_doctors_id'), 'doctors', ['id'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('slot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reason', sa.VARCHAR(collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('booked_at', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('FK__appointme__patie__70DDC3D8'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['slot_id'], ['slots.id'], name=op.f('FK__appointme__slot___71D1E811'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__appointm__3213E83F4311DB83'))
    )
    op.create_index(op.f('ix_appointments_patient_id'), 'appointments', ['patient_id'], unique=False)
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('is_active', mssql.BIT(), server_default=sa.text("('1')"), autoincrement=False, nullable=False),
    sa.Column('created_at', mssql.DATETIMEOFFSET(), server_default=sa.text('(getdate())'), autoincrement=False, nullable=False),
    sa.Column('updated_at', mssql.DATETIMEOFFSET(), server_default=sa.text('(getdate())'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__users__3213E83F6107FD09'))
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###
